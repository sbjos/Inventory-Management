@startuml
title CreateWarehouseInWarehouse

actor Client
participant APIGateway
participant Lambda
participant CreateWarehouse
participant WarehouseDao
participant ServiceUtility
participant Converter
database Database

Client -> APIGateway : POST / Warehouse
activate Client
APIGateway -> Lambda
activate Lambda
Lambda -> CreateWarehouse :  handleRequest(CreateWarehouseRequest, Context)
activate CreateWarehouse
CreateWarehouse -> ServiceUtility : isValidString(name)
activate ServiceUtility

alt if name invalid
    CreateWarehouse <-- ServiceUtility : false
    Lambda <-- CreateWarehouse : throw InvalidAttributeException
    APIGateway <-- Lambda
    Client <-- APIGateway : 4xx Response
else otherwise, continue
end

CreateWarehouse -> ServiceUtility : generateId()
CreateWarehouse <-- ServiceUtility : new Warehouse ID
deactivate ServiceUtility

CreateWarehouse -> CreateWarehouse : populate Warehouse object

CreateWarehouse -> WarehouseDao : saveWarehouse(Warehouse)
WarehouseDao -> Database : save Warehouse
activate WarehouseDao

alt if name In Use
    WarehouseDao <-- Database : false
    CreateWarehouse <-- WarehouseDao : false
deactivate WarehouseDao
    Lambda <-- CreateWarehouse : throw NameAlreadyInUseException
    APIGateway <-- Lambda
    Client <-- APIGateway : 4xx Response
else otherwise, continue
end


Lambda <-- CreateWarehouse : CreateWarehouseResult
deactivate CreateWarehouse
APIGateway <-- Lambda
deactivate Lambda
Client <-- APIGateway : 200 Response
deactivate Client

@enduml
