openapi: 3.0.3
info:
  title: Inventory Management
  description: |-
    Item - 
    Inventory Management API allows users to manage their inventories with the 
    possibility of adding, modifying or deleting inventory items. Also provides the 
    the ability to filter by item name, category and availability.
  version: 1.0.0
paths:
  /inventory/add:
    post:
      description: "Add an item to the inventory"
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: category
          in: query
          required: true
          schema:
            type: string
        - name: quantity
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
        - name: location
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  section: "a12"
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "InvalitemId Input"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "InvalitemId Input"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /category/add:
    post:
      description: "Add a category for an item to use"
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  category: "name"
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  category: "name"
        "400":
          description: "InvalitemId Input"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "InvalitemId Input"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /location/add:
    post:
      description: "Add a location for an item to use"
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  location: "name"
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  location: "name"
        "400":
          description: "InvalitemId Input"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "InvalitemId Input"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /inventory/update:
    put:
      description: "Update an item from the inventory."
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: itemId
          in: query
          required: false
          schema:
            type: string
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: availability
          in: query
          required: false
          schema:
            type: string
        - name: quantity
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: location
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /inventory/delete:
    delete:
      description: "Delete an item from the inventory"
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  message: "Item Deleted Successfully"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400,
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500,
                  message: "Server Error"
  /category/delete:
    delete:
      description: "Delete a category"
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  message: "category Deleted Successfully"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400,
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500,
                  message: "Server Error"
  /location/delete:
    delete:
      description: "Delete a location"
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  message: "location Deleted Successfully"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400,
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500,
                  message: "Server Error"
  /inventory/name/{name}:
    get:
      description: "Get an item by name from the inventory"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400,
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500,
                  message: "Server Error"
  /inventory/id/{itemId}:
    get:
      description: "Get an item by ID from the inventory"
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400,
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500,
                  message: "Server Error"
  /inventory/available/{availability}:
    get:
      description: "Get a list of items from the inventory based on availability"
      parameters:
        - name: availability
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ItemList"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400,
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500,
                  message: "Server Error"
  /inventory/category/{category}:
    get:
      description: "Get a list of items from the inventory based on category"
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ItemList"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /inventory/category/{category}/{availability}:
    get:
      description: "Get a list of items from the inventory based on availability in a category"
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
        - name: availability
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ItemList"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /inventory/location/{location}:
    get:
      description: "Get a list of item from the inventory based on location"
      parameters:
        - name: location
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ItemList"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /inventory/location/{location}/{category}:
    get:
      description: "Get a list of item from the inventory based on category in a location"
      parameters:
        - name: location
          in: path
          required: true
          schema:
            type: string
        - name: category
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ItemList"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /inventory/all:
    get:
      description: "Get a list of all items in the inventory"
      parameters:
        - name: all
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ItemList"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /category/{category}:
    get:
      description: "Get a category"
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  itemlocation: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /category/all:
    get:
      description: "Get a list of all categories"
      parameters:
        - name: all
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ItemList"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  itemlocation: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /location/{location}:
    get:
      description: "Get a list location"
      parameters:
        - name: location
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Item"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"
  /location/all:
    get:
      description: "Get a list of all locations"
      parameters:
        - name: all
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ItemList"
                example:
                  name: "name"
                  itemId: "itemId"
                  category: "category"
                  availability: "true"
                  quantity: 1
                  location: "a12"
        "400":
          description: "Item Not Found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 400
                  message: "Item Not Found"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"
                example:
                  code: 500
                  message: "Server Error"

components:
  schemas:
    Item:
      properties:
        name:
          type: string
        itemId:
          type: string
        category:
          type: string
        availability:
          type: string
        quantity:
          type: integer
        location:
          type: string
    ItemList:
      type: object
      properties:
        name:
          type: string
        itemId:
          type: string
        category:
          type: string
        availability:
          type: string
        quantity:
          type: integer
        location:
          type: string
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string