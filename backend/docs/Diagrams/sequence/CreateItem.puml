@startuml
title CREATE ITEM

actor Client
participant APIGateway
participant Lambda
participant CreateItemService
participant ItemDao
participant ServiceUtility
database Database

Client -> APIGateway : POST / Item
activate Client
APIGateway -> Lambda
activate Lambda
Lambda -> CreateItemService :  handleRequest(Controller, Context)
activate CreateItemService

CreateItemService -> ItemDao : find(name)
activate ItemDao
ItemDao -> Database : load

alt if name Is Not In Use
    ItemDao <-- Database : false
    CreateItemService <-- ItemDao : false
    Lambda <-- CreateItemService : throw ItemAlreadyExistException
    APIGateway <-- Lambda
    Client <-- APIGateway : 4xx Response
else otherwise, continue
end

CreateItemService -> ServiceUtility : isValid(String)
activate ServiceUtility

alt if name invalid
    CreateItemService <-- ServiceUtility : false
    Lambda <-- CreateItemService : throw InvalidAttributeException
    APIGateway <-- Lambda
    Client <-- APIGateway : 4xx Response
else otherwise, continue
end

CreateItemService <-- ServiceUtility : Name is Valid

CreateItemService -> ServiceUtility : generateId()

alt if ID Does Not Exist
    CreateItemService <-- ServiceUtility : false
    Lambda <-- CreateItemService : throw InvalidAttributeException
    APIGateway <-- Lambda
    Client <-- APIGateway : 4xx Response
else otherwise, continue
end

CreateItemService <-- ServiceUtility : New Item ID
deactivate ServiceUtility

CreateItemService -> CreateItemService : Populate Item Object

CreateItemService -> ItemDao : save(Item)
activate ItemDao

ItemDao -> Database : save

deactivate ItemDao

Lambda <-- CreateItemService : handleRequest(Controller, Context)
deactivate CreateItemService
APIGateway <-- Lambda
deactivate Lambda
Client <-- APIGateway : 200 Response
deactivate Client

@enduml
